<!-- 固定フィルター -->
<div class="filter_img obj-fit"><img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/bg_fixd.png" alt=""></div>
<div class="about_mv">
    <div class="underpage_title">
        <p class="u_sub_title">CATEGORY</p>
        <h1 class="products_title obj-fit"><img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate_ttl.png" alt="商品一覧"></h1>
    </div>
</div>

<div class="c-page_wrap">
    <div class="inner category_inner">
        <ul class="list_item scroll">
            <li>
            <a href="/collections/ryuminmin/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-ryuminmin.jpg" alt="琉珉珉餃子">
                </div>
                <p class="cate_text">琉珉珉餃子</p>
            </a>
            </li>
            <li>
            <a href="/collections/goya/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-goya.jpg" alt="ゴーヤー餃子">
                </div>
                <p class="cate_text ">ゴーヤー餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/mozuku/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-mozuku.jpg" alt="">
                </div>
                <p class="cate_text">もずく餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/ikasumi/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-ikasumi.jpg" alt="">
                </div>
                <p class="cate_text">イカ墨餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/ninniku/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-ninniku.jpg" alt="">
                </div>
                <p class="cate_text two_lines">にんにく餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/agu/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-agu.jpg" alt="">
                </div>
                <p class="cate_text">アグー餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/shimatougarashi/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-tougarashi.jpg" alt="">
                </div>
                <p class="cate_text">島とうがらし<br class="br_490">餃子</p>
            </a>
            </li>

            <li>
            <a href="/collections/other/#list" class="category_list p_cate_list">
                <div class="card_img obj-fit">
                <img src="https://cdn.shopify.com/s/files/1/0669/5790/1973/files/cate-otameshi.jpg" alt="">
                </div>
                <p class="cate_text">お試し/<br class="br_490">セット</p>
            </a>
            </li>
        </ul>
    </div>
</div>

<div class="categorypage_wrap" id="list">
    <div class="underpage_inner">
        <div class="p-order-content">
            <form id="FacetSortForm" class="arrow_u">
            <!-- <p>全4件</p> -->
            <p>並び順：</p>
            {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                <select name="sort_by" id="SortBy" aria-describedby="a11y-refresh-page-message">
                    <option value="manual" {% if sort_by == "manual" %}selected{% endif %}>おすすめ</option>
                    <option value="created-descending" {% if sort_by == "created-descending" %}selected{% endif %}>新着順</option>
                    <option value="price-ascending" {% if sort_by == "price-ascending" %}selected{% endif %}>価格が安い順</option>
                    <option value="price-descending" {% if sort_by == "price-descending" %}selected{% endif %}>価格が高い順</option>
                </select>
            </form>
        </div><!--p-order-content-->

        <div class="p-products_list flex scroll">
            {% for product in collection.products %}
            <div class="item-card02">
                <a href="{{ product.url }}">
                    <div class="img-box obj-fit">
                        <img src="{{ product.featured_image.src | img_url: 'master' }}" alt="">
                        </div>
                    <p class="cate">{{ product.tags | join: ', ' }}</p>
                    <p class="item-name">{{ product.title }}</p>
                    <p class="price">{{ product.price | money }}</p>
                </a>
                <div class="cart_btn">
                    <button type="button" class="cart"  data-product-id="{{ product.variants.first.id }}">カートに入れる</button>
                </div>
            </div><!-- /.item-card -->
            {% endfor %}
        </div><!-- /.product-list -->
    </div>
</div>

{% render 'under_faq' %}

{% javascript %}
   document.addEventListener('DOMContentLoaded', function() {
    // ソート
    let parameters = {};
    if (location.search.length) {
        let keyValue = "";
        let couples = location.search.substr(1).split('&');
        for (let i = 0; i < couples.length; i++) {
            keyValue = couples[i].split('=');
            if (keyValue.length > 1) {
                parameters[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
            }
        }
    }
    
    const selectElement = document.querySelector("#SortBy");
    if (selectElement) {
        selectElement.addEventListener("change", function(event) {
            parameters.sort_by = event.target.value;
            const url = Object.keys(parameters).map(function(key) {
                return encodeURIComponent(key) + '=' + encodeURIComponent(parameters[key]);
            }).join('&');
            location.search = url;
        });
    }

    // ハイライト
    const url = window.location.href;
    const items = document.querySelectorAll('.thumn-box');

    let targetUrl = '';

    // URLに基づいてターゲットURLを設定
    if (url.includes('/collections/ryuminmin')) {
        targetUrl = '/collections/ryuminmin/';
    } else if (url.includes('/collections/mozuku')) {
        targetUrl = '/collections/mozuku/';
    } else if (url.includes('/collections/ikasumi')) {
        targetUrl = '/collections/ikasumi/';
    } else if (url.includes('/collections/ninniku')) {
        targetUrl = '/collections/ninniku/';
    } else if (url.includes('/collections/agu')) {
        targetUrl = '/collections/agu/';
    } else if (url.includes('/collections/shimatougarashi')) {
        targetUrl = '/collections/shimatougarashi/';
    } else if (url.includes('/collections/other')) {
        targetUrl = '/collections/other/';
    }

    items.forEach(function(item) {
        const link = item.querySelector('a');
        if (link && link.getAttribute('href') === targetUrl) {
            link.classList.add('highlight');
        }
    });

    // jQueryの確認と読み込み
    if (typeof jQuery !== 'undefined') {
        // jQueryがロードされている場合の処理
        // https://github.com/protonet/jquery.inview /で対応
        $('.scroll').on('inview', function () { // .scrollが表示されたら
            $(this).addClass('active'); // 処理を記述
        });
    } else {
        console.error('jQuery is not loaded');
    }
    // カートに追加ボタンの処理
    const buttons = document.querySelectorAll('.cart_btn .cart');
    
    buttons.forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            addToCart(productId);
        });
    });
    
    function addToCart(productId) {
        fetch('/cart/add.js', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                id: productId,
                quantity: 1
            })
        })
        .then(response => response.json())
        .then(data => {
            // カートに追加後にカートページに遷移
            window.location.href = '/cart';
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
});
{% endjavascript %}

{% schema %}
    {
    "name": "products",
    "presets": [
    {
        "name": "products"
    }
    ]
}
{% endschema %}